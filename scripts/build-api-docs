#!/usr/bin/env bash

declare -r SNIPPETS_BUILD_DIRECTORY=/tmp/credhub-documentation-build/asciidoc/snippets

function set_bash_error_handling() {
  set -eux
}

function go_to_project_root_directory() {
  local -r script_dir=$( dirname "${BASH_SOURCE[0]}")

  cd "$script_dir/.."
}

function install_ruby_dependencies() {
  bundle install
}

function copy_cli_doc_snippets_to_build_directory() {
	local -r cli_docs_dir=/tmp/credhub_cli_docs
	if [ -d "$cli_docs_dir" ]
	then
		cp -R ${cli_docs_dir}/* "${SNIPPETS_BUILD_DIRECTORY}"
	fi
}

function copy_spring_restdoc_snippets_to_build_directory() {
    echo "*** present dir: $PWD"
    local -r credhub_dir="$PWD/../credhub-release/src/credhub"
    local -r version=${1}
    local old_gradle_structure=$(echo "$version <= 2.1" | bc)
    mkdir -p "${SNIPPETS_BUILD_DIRECTORY}"
    if [ "$old_gradle_structure" == "1" ]; then
      cp -R "$credhub_dir"/build/generated-snippets/ "${SNIPPETS_BUILD_DIRECTORY}"
    else
      cp -R "$credhub_dir"/backends/credhub/build/generated-snippets/ "${SNIPPETS_BUILD_DIRECTORY}"
   fi
}

function build_slate_docs() {
  local -r app_dir=$PWD/built-site
  local -r api_docs_dir="$PWD/../credhub-api-docs"
  local -r credhub_versions=$(git -C "$api_docs_dir" branch -r | cut -d'/' -f2 | grep -e '[0-9].[0-9]')
  local -r credhub_dir="$PWD/../credhub-release/src/credhub"
  export GOPATH="$HOME/go"
  local -r credhub_acceptance_test_dir="$GOPATH/src/github.com/cloudfoundry-incubator/credhub-acceptance-tests"

  for version in $credhub_versions; do
    build_dir=$app_dir/public/version/"$version"
    mkdir -p "$build_dir"
    rm -rf source/includes source/index.html.md versionfile
    git -C "$api_docs_dir" checkout "$version"

    local should_build_autodocs=$(echo "$version >= 2.1" | bc)
    if [ "$should_build_autodocs" == "1" ]; then
      git -C "$credhub_dir" checkout "${version}.x"
      git -C "$credhub_acceptance_test_dir" checkout "${version}.x"
      "$credhub_dir"/scripts/generate_documentation_snippets
      copy_spring_restdoc_snippets_to_build_directory $version

      "$PWD"/scripts/start-credhub-server
      if [ -f "${credhub_acceptance_test_dir}/scripts/generate_documentation_snippets" ]; then
	"$credhub_acceptance_test_dir"/scripts/generate_documentation_snippets
	copy_cli_doc_snippets_to_build_directory
      fi

      scripts/convert-asciidoc-template-to-slate-markdown $version
      pkill java
    fi

    cp -R "$api_docs_dir"/* source

    echo -n "$version" > versionfile

    bundle exec middleman build --clean
    cp -R build/* "$build_dir"
  done
  if [ "${build_master}" == "true" ]; then
    build_dir=$app_dir/public/version/master
    mkdir -p "$build_dir"
    rm -rf source/includes source/index.html.md versionfile
    git -C "$api_docs_dir" checkout 2.1
    git -C "$credhub_dir" checkout "master"
    git -C "$credhub_acceptance_test_dir" checkout "master"
    "$credhub_dir"/scripts/generate_documentation_snippets
    mkdir -p "${SNIPPETS_BUILD_DIRECTORY}"
    cp -R "$credhub_dir"/backends/credhub/build/generated-snippets/ "${SNIPPETS_BUILD_DIRECTORY}"

    "$PWD"/scripts/start-credhub-server
    if [ -f "${credhub_acceptance_test_dir}/scripts/generate_documentation_snippets" ]
    then
      "$credhub_acceptance_test_dir"/scripts/generate_documentation_snippets
      copy_cli_doc_snippets_to_build_directory
    fi
    scripts/convert-asciidoc-template-to-slate-markdown
    pkill java

    cp -R "$api_docs_dir"/* source

    echo -n "master" > versionfile

    bundle exec middleman build --clean
    cp -R build/* "$build_dir"
  fi
}

function generate_versions_json() {
  local -r app_dir=$PWD/built-site
  local -r api_docs_dir=$PWD/../credhub-api-docs

  versions="$(git -C "$api_docs_dir" branch -r | cut -d'/' -f2 | grep -e '[0-9].[0-9]' | xargs -I '{}' echo \\\"'{}'\\\" | xargs | sed -e 's/ /,/g')"
  if [ "$build_master" == "true" ]; then
    versions="${versions},\"master\""
  fi
  echo -n '[' "$versions" ']' > "$app_dir/public/versions.json"
}

function generate_index_html() {
  local -r app_dir=$PWD/built-site
  local -r api_docs_dir=$PWD/../credhub-api-docs
  local -r latest_version=$(git -C "$api_docs_dir" branch -r | cut -d'/' -f2 | grep -e '[0-9].[0-9]' | tail -n 1)

cat >"$app_dir/public/index.html" <<-EOF
<html>
  <head>
    <script>
      window.location.href = "/version/$latest_version";
    </script>
  </head>

  <body></body>
</html>
EOF
}

function main() {
  build_master=false
  if [ "$1" == "--dev" ]; then
    build_master=true
  fi
  set_bash_error_handling
  go_to_project_root_directory

  install_ruby_dependencies
  build_slate_docs
  generate_versions_json
  generate_index_html
}

main "$@"
